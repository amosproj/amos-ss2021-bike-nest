// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`renders correctly 1`] = `
<RCTSafeAreaView
  emulateUnlessSupported={true}
  style={
    Object {
      "alignItems": "center",
      "backgroundColor": "#fff",
      "flex": 1,
      "justifyContent": "center",
    }
  }
>
  <View
    style={
      Object {
        "alignItems": "center",
        "flex": 1,
      }
    }
  >
    <Text
      style={
        Object {
          "fontSize": 28,
          "fontWeight": "bold",
          "margin": 30,
          "padding": 15,
        }
      }
    >
       Great you are in!
    </Text>
    <Image
      source={1}
      style={
        Object {
          "height": 200,
          "resizeMode": "contain",
          "width": 300,
        }
      }
    />
    <View
      style={
        Object {
          "alignItems": "center",
          "flex": 1,
          "justifyContent": "center",
        }
      }
    >
      <Text
        style={
          Object {
            "fontSize": 20,
          }
        }
      >
        Go to spot X 
      </Text>
      <Text
        style={
          Object {
            "fontSize": 20,
          }
        }
      >
         and open with the button 
        

      </Text>
    </View>
    <View
      accessible={true}
      focusable={true}
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "alignItems": "center",
          "backgroundColor": "#D6F2C9",
          "borderColor": "white",
          "borderRadius": 64,
          "borderWidth": 6,
          "bottom": 50,
          "elevation": 3,
          "height": 128,
          "justifyContent": "center",
          "opacity": 1,
          "width": 128,
        }
      }
    >
      <Text />
      <Text
        style={
          Object {
            "fontSize": 18,
            "fontWeight": "300",
          }
        }
      >
         Unlock 
      </Text>
    </View>
  </View>
  <View
    style={
      Object {
        "flexDirection": "row",
        "height": 70,
        "justifyContent": "flex-start",
        "width": "100%",
      }
    }
  >
    <View
      accessible={true}
      focusable={true}
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "backgroundColor": "#F28D35",
          "flex": 1,
          "opacity": 1,
          "padding": 5,
        }
      }
    >
      <View
        style={
          Object {
            "alignItems": "center",
            "flexDirection": "column",
            "justifyContent": "flex-start",
          }
        }
      >
        <View
          style={
            Object {
              "margin": 5,
            }
          }
        >
          <Image
            source={1}
          />
        </View>
        <Text
          style={
            Object {
              "color": "#F2F2F2",
              "fontSize": 14,
              "height": "100%",
              "textAlign": "center",
              "width": "100%",
            }
          }
        >
          Profil
        </Text>
      </View>
    </View>
    <View
      accessible={true}
      focusable={true}
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "backgroundColor": "#F28D35",
          "flex": 1,
          "opacity": 1,
          "padding": 5,
        }
      }
    >
      <View
        style={
          Object {
            "alignItems": "center",
            "flexDirection": "column",
            "justifyContent": "flex-start",
          }
        }
      >
        <View
          style={
            Object {
              "margin": 5,
            }
          }
        >
          <Image
            source={1}
          />
        </View>
        <Text
          style={
            Object {
              "color": "#F2F2F2",
              "fontSize": 14,
              "height": "100%",
              "textAlign": "center",
              "width": "100%",
            }
          }
        >
          (un)lock
        </Text>
      </View>
    </View>
    <View
      accessible={true}
      focusable={true}
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "backgroundColor": "#F28D35",
          "flex": 1,
          "opacity": 1,
          "padding": 5,
        }
      }
    >
      <View
        style={
          Object {
            "alignItems": "center",
            "flexDirection": "column",
            "justifyContent": "flex-start",
          }
        }
      >
        <View
          style={
            Object {
              "margin": 5,
            }
          }
        >
          <Image
            source={1}
          />
        </View>
        <Text
          style={
            Object {
              "color": "#F2F2F2",
              "fontSize": 14,
              "height": "100%",
              "textAlign": "center",
              "width": "100%",
            }
          }
        />
      </View>
    </View>
    <View
      accessible={true}
      focusable={true}
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "backgroundColor": "#F28D35",
          "flex": 1,
          "opacity": 1,
          "padding": 5,
        }
      }
    >
      <View
        style={
          Object {
            "alignItems": "center",
            "flexDirection": "column",
            "justifyContent": "flex-start",
          }
        }
      >
        <View
          style={
            Object {
              "margin": 5,
            }
          }
        >
          <Image
            source={1}
          />
        </View>
        <Text
          style={
            Object {
              "color": "#F2F2F2",
              "fontSize": 14,
              "height": "100%",
              "textAlign": "center",
              "width": "100%",
            }
          }
        >
          Navigation
        </Text>
      </View>
    </View>
    <View
      accessible={true}
      focusable={true}
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "backgroundColor": "#F28D35",
          "flex": 1,
          "opacity": 1,
          "padding": 5,
        }
      }
    >
      <View
        style={
          Object {
            "alignItems": "center",
            "flexDirection": "column",
            "justifyContent": "flex-start",
          }
        }
      >
        <View
          style={
            Object {
              "margin": 5,
            }
          }
        >
          <Image
            source={1}
          />
        </View>
        <Text
          style={
            Object {
              "color": "#F2F2F2",
              "fontSize": 14,
              "height": "100%",
              "textAlign": "center",
              "width": "100%",
            }
          }
        >
          Verlauf
        </Text>
      </View>
    </View>
  </View>
</RCTSafeAreaView>
`;
